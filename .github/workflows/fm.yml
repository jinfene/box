name: FongMi APK Auto Updater

on:
  push:
    branches: [main]
  schedule:
    - cron: "0 17 */2 * *" # 每2天北京时间凌晨1点运行（UTC时间9点）
  workflow_dispatch: # 支持手动触发

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - name: 检出当前仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          # 添加 token 确保有写入权限
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 获取当前版本
        id: local_version
        run: |
          if [ -f version.txt ]; then
            LOCAL_VERSION=$(cat version.txt)
            echo "当前版本: $LOCAL_VERSION"
            echo "LOCAL_VERSION=$LOCAL_VERSION" >> $GITHUB_ENV
          else
            echo "首次同步，创建版本记录"
            echo "LOCAL_VERSION=0" >> $GITHUB_ENV
          fi

      - name: 获取最新文件信息
        id: get_file_info
        run: |
          # 配置目标文件列表
          APK_FILES=(
            "apk/release/leanback-arm64_v8a.apk"
            "apk/release/leanback-armeabi_v7a.apk"
          )
          
          # 初始化版本变量
          SHA_VALUES=""
          DOWNLOAD_URLS=""
          
          # 遍历每个文件获取信息
          for FILE_PATH in "${APK_FILES[@]}"; do
            echo "处理文件: $FILE_PATH"
            
            # 获取文件最新提交信息
            API_URL="https://api.github.com/repos/FongMi/Release/commits?path=$FILE_PATH&sha=fongmi&per_page=1"
            RESPONSE=$(curl -sL "$API_URL")
            
            # 提取最新提交SHA
            FILE_SHA=$(echo "$RESPONSE" | jq -r '.[0].sha')
            if [ -z "$FILE_SHA" ] || [ "$FILE_SHA" = "null" ]; then
              echo "::error::无法获取文件 $FILE_PATH 的版本信息"
              exit 1
            fi
            
            # 构建下载URL
            FILE_URL="https://github.com/FongMi/Release/raw/fongmi/$FILE_PATH"
            
            # 添加到组合变量
            SHA_VALUES+="$FILE_SHA|"
            DOWNLOAD_URLS+="$FILE_URL|"
   
