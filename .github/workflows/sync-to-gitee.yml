name: Sync to Gitee

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 1. 检出GitHub仓库
      - name: 检出GitHub仓库
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整历史
          token: ${{ secrets.GITHUB_TOKEN }}

      # 2. 设置Gitee同步认证
      - name: 配置Gitee认证
        run: |
          # 设置全局用户信息
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 添加Gitee远程仓库
          git remote add gitee https://${{ secrets.neural-crocodile }}:${{ secrets.c6ef158406fad0a9163c59cd0fcb3b58 }}@gitee.com/${{ secrets.neural-crocodile/fm }}.git

      # 3. 检查Gitee连接
      - name: 验证Gitee连接
        run: |
          git ls-remote --heads gitee

      # 4. 同步到Gitee（强制推送）
      - name: 推送到Gitee
        run: |
          # 处理可能的审核内容
          if [ -f "content_approval.txt" ]; then
            echo "审核标记文件存在，添加提交信息"
            git add content_approval.txt
            git commit -m "📝 添加内容审核标记" || echo "无需提交"
          fi

          # 强制推送到Gitee
          git push gitee main:main --force

          echo "✅ 已同步到Gitee仓库"

      # 5. 设置Gitee内容审核标记
      - name: 添加审核标记
        run: |
          # 创建内容审核标记文件
          echo "此仓库内容需人工审核" > content_approval.txt
          echo "同步时间: $(date)" >> content_approval.txt
          echo "同步来源: $GITHUB_REPOSITORY" >> content_approval.txt

          # 提交审核标记
          git add content_approval.txt
          git commit -m "📝 添加内容审核标记" || echo "已存在标记"

          # 更新到Gitee
          git push gitee main:main

      # 6. 通知机制（可选）
      - name: 发送审核通知
        if: success()
        uses: dawidd6/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
